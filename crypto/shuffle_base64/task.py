def shuffle(charset: str):
    charset = list(charset)
    charset = charset[4:] + charset[:4]
    charset = "".join(charset)
    return charset


def base64encode(text: str, charset: str) -> str:
    # base64编码,不用仔细理解
    fix = len(text) % 3
    offset = (6 - fix * 2) % 6
    text = text.encode("utf-8")
    binstr = (bin(int.from_bytes(text) << offset))[2:]
    binstr = "0" * ((8 - len(binstr) + offset) % 8) + binstr
    intstr = [int(binstr[i : i + 6], 2) for i in range(0, len(binstr), 6)]
    ciphertext = "".join([charset[_] for _ in intstr]) + "=" * ((3 - fix) % 3)
    return ciphertext


flag = "WHUCTF{???????????????}"
charset = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
ciphertext = base64encode(flag, charset)
for _ in range(16):
    charset = shuffle(charset)
    ciphertext = base64encode(ciphertext, charset)

print(ciphertext)
"""
TXpRdE93dGdLREZJVlJGQVFSOUNZZ2xoSVNGUlBSVnFPZzVzT1FwSVZBVkhLU05ITmlKTll3WW5XeWxRWkFFeVBPb3RVd3RKU2hsQ0h3a25PdmhPVlFsdlhDRlNLQ3B2UWpSc094UkxYejlHWWhWTE5TSktYZzFkWEFoUVl4RmhPeVExWXdod0pRQktWUlVyUHlKd1d3cGZSaVZQWXdSeFBTSTFKUVJ2V0FWR1BTZEhOZzB4WGd0aVBndENQU1p1T2lVeFVoUkpRVE5HVWZoRFB3eGtNZ2hmU2dwQlBSRjlPaVJTSndvekpTNUdWQ05qT3ZoOVl3WklQZ0pIUS9SZk9qTmtNeEp2UWdGRFB5TjlQdlpmWkFwZlZESlBZdzFQUGlGT0pncEpaQ2xKUEJGaVJmZE9RUVZLU2U1SFpSaG1PeVF0WXhGdlZDQk9KdzBuUHlKME13aHZXQUZRS0ROcFB5RkdNZzVKVnpCSFVnbENSQXhLTWcxZlJmaExQQXh3T1NKZ093aHZJU3hDUHo5OVB2WTFYUXd6T2pKSFl3QnhOd3MxTWhSSlFTbEdaUEIrUlBkS1FndGZaQU5MS0NaeE9RdFJZQVZKTmdSTFZQOW1SRFJXTXdsZlhBWkZaL1IvUHlSb0d3cHhTZ2RKR3pkUFBBeG9OUVJJTWVwQ0p3MVdPaUprS1JNMU5oRkhVZzB5TmlWRllBd3pOaEpQVXhsck95Sm9OQXBJVXpWSFV5dHJOU05DVVExZmEvaFJLUUJtUFBoZ1Z3cEpWQkZIVXdVeFJEVXhTZ2x4WnpOL1ovTnZPU1JPSndWZ1FmWkZQQVZQTlF4S1h3bGVQZ2RRWmhodk9ReHJZQVJ2UWkxU0tEY25PeUpOWVF4SU5nMVFQVGRzUi9kR013NDBWekJHUFNOQ1JQZENNaEluUWdKTFBTTmhPaUpmWkJKdlBoQkJHejlBT3d0Z1dBb25NZzVDWkFWT054OUNId3B5SkQ5SVZDSndPekpTU2doTFFmUklLUTF2T2pOVlh4UTBXekZMVWhFeU5pUnNLQWhJUWlwSFV3VitQU0JuV2hOdldBRkhWQ01uTlNKa1hoUW5SZXBISndsbk93NXdWd1ZKTmdCQ1BDTkVQdmhrTlFvblp6TkJQUEJxTng5S1BBVktWREJKS1NkZk5qSk9NUVFySkMxUVpBQnlPaU5XTndWSlFnRk5aVDh6UC9oa1hnaGdTaEpDUFJWV1JQWTFNdzR6T2pCSEtTY25OaUp6WXdaSlgvaElKdlJoT2lGQ013cHZTZ0JGVXlzeVB3NUdOZ29uS0RkQlYvUlBQQjh4SHdweFNTbEdQaUowUEF4U1FReGVLUWRMVXpkbU9USmdOeFJ0WEMxT0tDZEROaVZWWkFwdU9qRlFQUmxyUGlGK0d3UmhTVE5GUFN0SE5Rd3RRUXBmWi9oUVpBRkRQUFpGWnhOZlZDQkJQQVVuUVNOTllnbHlKT3BDVi9SK095SndNZzQwTWZaSVpDZEROU0pLWUJVME5naFFaU3RtT2pRMVpoUnZLUkZIVlJFMU93MStKd3BmVXpOT1ZBQnZRalZHSlFWZlFpcEhHemN5TlF4MFFoWTBaL1pIVXZoaE9pUXRVaFEwUmo5T1pnazFQdmhLWEF0TUtTVlJWL1JOUHlKMEpoUkxSakpIVXlORE5mZEtVUTFmS1F0SFl3MXNPak5rUHdodlJnRkZWU05BUVE1R0pReHdWQVpJUFFSdlBTSjBPUk54U1RORlBTZExOUTB3WmcxaFcrcElHd2tyT2c0dE13dEpXQkJEUEExRlFTTktYUWh2V0E1L1l3Rk9RZXBHTndWS1FUQkhWQmhzUXlKS013cGhYQWhRWXdGQVBURk9aaFJ2VnpOSVVnazFQeU0xWWd0eElRRlFVd1ZBTnd0Q09RNWVVelZIS1NOL1BESk9NUTVlUWZSQ1ZSazBPaUZTUHd0ZFhEQkxWUEJFUHc1V01nbHhNaEZPVXZoL05nMVNIeE5lSlM1R1BSVmlSL2RLTkExZVZBZFFaZ2xqT3VwemFBVmZNaEZTWlQ4blB5TktZd3BmU1ROQ1l4aHlRZlorUEE1SVZBRkZQUmgwT1RKa01ndGdTU2xRVWZSck9pUXRZeFZKUWhsQ0d4RXhQdzFrV2dseUpRRlJLQ3B1UHlGT1BBVmlSakpKWkNOZVF6SktRZ3hnVkF0Q0h4bC9Pek5mWXhVMFFoQktWUlV6T3lKK1hneHVPVGRIWXdWOVBDSkNNd3BKYUFORll5ZExNek14WGhNclBmaE5RL053T3lRdFVoTTBQZ0ZHVXlkRk5mZCtXQWx3U2dKL1l2QkJPaUZDTVJOZUtEZEpHemREUXcxQlpnUW5RZlJISncxdk9pSmdHd2x2UWdGUkd4VitPelJyV2dwZ1NlcE9Vd1Y5T1NGT054TnhTaU5HUGlKd05mZGtOUWxNS1FCUktEWnhPekpXT3hGdktRRkpVZzFFUHd0Z1dnaHZWK3BIWXZoT095RktIdzVKTVRCSktTWndReUpPWVE1Z1ZBTkhQQTFBT1RGT1Z3aHZSVFZLVXlNMVJESndXd3h2VkNKQ1BTZFdSUFpLR3hOZ1FpSkdaUEIvUERKS1FRNWVQZlZIWlJWdU95SldQeEJKU2hsUksvQXlPdzVWWXdwS1crcEJVeWQ5T3c1c01RVnhPVEJKWWdsalJneCtOUkJ5S1FoQ1B3bEVNelF0TmhKdmFDMU9Kd2tuUHlOOVpBcGdWQUpQWXcxK1BTSlNHdzQxTWlkR1pQaHlSZmN0WGhVblZ5bFFVaU5lUFRGR1l4RnZSaEJER3hFbk92aE9XZ0p4SVFGU0pmQnFQU0pzSHdwdlp6SkpHd0ZMUi9kQlpBeGZXeWxRWXlkZ09TSmtPd1J2V3pKSFZSRjlQeUprTnd3bklQVklLQ2RkUGlBdE13cGZhQVpGWWdrbk5Rd3RYaFUwV0FKTFZDWnNQREpzR3hGZlFnTk9LQ3RJUHd0S05nbGdTZ1pCUFBCT1BDRTFKd3BKWno5Skp3RmpOZ3hTUWdWSk1naEhZeEZ3T2d4a05oTTBaQ3hKVlFsSE5pVlZYZ3BlT1ROS1l4aHhSUForSmdwTU9UUkhaQ2RQTlRJMVhoUW5NZTVOVlFobVBQaGZhQVZ2V0FOVEp3MHhOZzVHTmdsTUtUSkNVeFZPUFE1b05BNWhOaVJGUFNaelJQZFNTaFFuTWdkR1pSaHdQU0ZHVndKdklRUkdWUlVuUlBkTllRaGdWREpQUFJsUE94OUdOQVZKWkQ5R1ZRRmVSUGRuWXhFclBmVkNWaGhtT3pGR1l3MWZOZ0JGVXlkRVJEUnNaQWh2V0E1RlBQZHZST3BXS1FwS01oRklQaUp3UXd4U1NoWXpQZlJCWWd4dk91bzFYd1ZKSVJGUEtDTitQeUpnWXdwdVBpSlBVeEZxT3lJdE5BVXpQZ1JHVkJsSE9mZE9Nd3RmSVBaSFZCRXlQREZDUXhWSlBnTkRQUUV4UHlSR1pBbGZWQUZRWi9ScFBTUk9Kd296Vi9aSVpQQmZRd3hXWFFSSk1nbEJaQUZoUFF0T1doUmdKRFZKVlNzblAvaGtRZ2xMSUROQ1l3UnhSL1ZvTXc0MFFpTkZZeU4rUi9kd1FoQnhYQUpMUENKc09pVTFQaFJKU2hsUktBVi9PdmgrVndwZ1dBSkZQUGR4T2lWS0tRNWZRU2xKWkNOL05mYzFNdzFNS1FkUVZCRmlPdTUrUXhOd0pRRkNQQlZEUlE1V0p3cGZYRFpLWXcxclBpSkNPUTVMU2dKSVVoRnpOaUpPWHdWTEtRQlJLUkJ0T3lKU1Z3WTBXQU5RSml0RVAvZCtTZ0p4SVFKUVV2QnFSdlpHS1E1S1Z6RkdWZlJlUWlKS1NoRXlYQWhMUHo5d09pUitVd2h2SVJKSFZSRXpPeU5PTXd0eElTSk9LUUJ2T1I5Q0d4TnVQaWxHWkNkL1F6SndNZ1pKWC9SSEtEWm1QRFV4Tnd0ZFhDMUtVeEZGT3g5R05BaEpWQkZTS0JSd095UlNLUkJMU2dkSllnaHdPekpCWmdSSVFmUkNQd2xrT2c0dE1oUTFOZ0ZIVWdrblFTUkNWUWxoSVM1T0tCVlBPaUpTTWhOdk1nUkhWQmxQTmpOQ1FRNWZaL2hMVkFGRFBQWkdNd1Z3TVROSFVnVW5RU05LWUFsd1dBSkZaL1IrUmpSd09BUnVQU2xKSndsZlB2ZENNdzFmTmdKQ0d5dG1QQ0ZTUGhVMFFoQkNHdkFyUkNGSlpRbHZVek5ES0JWV1JmWlNQQTVKYUNWR1ZmUkhPU0owUWdWSVBmUkhWUWh0UFBka014QmZSakJMVlBCRk93dEtOQWh1UWlaQlZBVlBQQ05SV2hOZU9pcEZQaU1uUWd4S1VRNWVLT3BRVkJGZ09qUTFWd0p2S0RCUEp4RTFPek5OWGdwZlZBWkJQUTFyUFNGT0pncE1PaWRIUHdCc05TSk9RUVVuWi9oTFV4RXJORFF0WGhOZldBTkRQQTB4T3ZkT1dRbE1LVEpIWXdGK1F2WktId3B2Wno5R1ZmaEhRaUpLTWd4TU9nSkhQUUZmUFNGT1l3WkpWRDlHVmcwMVB3MTlaQXcwVXpOQ1V4Vk9PaDlDTXhRMVdDVi9aUEIvT1RNeFFnaGVRZ0ZMS0FCcU9ReFZaQVpKTWo5U0tBRkVOZXBXTWdsaE1nNUZQUGhOUHc1d0d3bzBNZlpJUFJsUE5UTTFZQll6VkFkTFBUZEJPdXB6WUFaSklRRlBLQ2NyT3pVd1lBdHlNZXAvWXhGdFFmWk9KUVJ3UVRaSFBTdEROUXd0WVFRblFmWklLU2RxTXpRc2FCRmZaRDlEUEJWL1JQZGtXZ2xmVkFaQ1V5cHVQU1JnSHc1Sk1UUkpaQ0owUXpKS1F3eE1PZlJMUUFsK095TmdHd1J3SlJKSVEvaDlSQ0V4V3d3MVZBSkhaQUZzUi9aS0h3VndRZzVHUGlkTE9TTTBZUkZ4WEFKTlVmUnVPakZLTXhFMFJpNUdVeFZBUHZoalpRbEpYQXBBWXZkd1FmZHNKd1J1UGU1RlB2QmlSL2MxTXhFek5nSkhLQ1p5T3ZoZ0d3UmdKUUZIVXlNclB2WkpXZ3R4YUFKSUtBVjlOTzVHT1E1TFNnRkdaUUZQT2ZjMU1nVkxRZ0JRWXcxbVBQZFdRd1J3S1Q5VEp5Ti9PeUZnT0FsZVBnNUJQVGRPUmZkb0pnb3pKU1JHVXlKd1F5SlZZZ1JKWEF0QlZSaHZPd3huYUFWSldCQkNQU2N5UlE1U1d3bGhJU3BTUFJGUFFmWitOQVZJU2l0SEtTYzFSL2RuWVJJelBmVkhQVFptUFROV1F3c3lYQzFJUUFWR05lcFdNZ2xmWENwQlV5cHZRVFZHSHhOdlcrNUpLU052UXZka05BdGVQZlJRWWhsb09USnNRdzVKYUJGUEh3bEdSUXgwSnd3MFNnRlJQUlZwTmdwb09CTnVQVFpIS1JoME5TTkNRd3RMWC9oTFBnRXJPUTUwT3hKSlBoSklVZ0VuUlBkME1nTnhJREpUS0FrMU9BdHZMTT09
"""
